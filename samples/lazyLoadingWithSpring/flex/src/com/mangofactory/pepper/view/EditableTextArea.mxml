<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:ac="adobe.ac.*" xmlns:mangofactory="com.mangofactory.*">
	<s:states>
		<s:State name="viewing" />
		<s:State name="editing" />
	</s:states>
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<s:transitions>
		<s:Transition fromState="*" toState="*" >
			<s:Resize targets="{[this,textArea]}"  duration="250"/>
		</s:Transition>
	</s:transitions>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="valueCommit",type="mx.events.FlexEvent")]
		[Event(name="changeStart",type="mx.events.FlexEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			[Bindable]
			public var text:String;
			
			[Bindable]
			public var editable:Boolean = true;
			private function onEditingComplete():void
			{
				this.text = textArea.text;
				this.currentState = 'viewing';
				dispatchEvent(new FlexEvent(FlexEvent.VALUE_COMMIT));
			}
			
			public function beginEdit():void
			{
				dispatchEvent(new FlexEvent(FlexEvent.CHANGE_START));
				this.currentState='editing';
				callLater(textArea.setFocus)
//				textArea.setFocus();
			}
			[Bindable]
			override public function get styleName():Object
			{
				return super.styleName;
			}
			override public function set styleName(value:Object):void
			{
				super.styleName = value;
			}
			[Bindable]
			public var label:String;
		]]>
	</fx:Script>
	<s:HGroup gap="15" includeInLayout="{editable}" visible="{editable}">
		<s:Label text="{this.label}" styleName="subHeader"  />
		<mangofactory:StyleImage styleName="pencil" useHandCursor="true" buttonMode="true" click="beginEdit();" includeIn="viewing" visible="{editable}"/>
		<mangofactory:StyleImage styleName="roundCheckmark" useHandCursor="true" buttonMode="true" click="onEditingComplete()" includeIn="editing"
					   />
	</s:HGroup>
	<s:RichEditableText styleName="{this.styleName}" color="#FFFFFF" text="{text}" width="100%" editable="{this.currentState == 'editing'}" id="textArea" 
						heightInLines="{NaN}" minHeight.editing="100" backgroundColor="#FFFFFF" backgroundAlpha.editing="0.1" backgroundAlpha.viewing="0"
						paddingLeft="10" paddingRight="10" paddingBottom="10" paddingTop="10"
						focusSkin="{null}"/>
</s:Group>
