<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>

    <display-name>DPHibernate</display-name>
    <description>BlazeDS Application</description>

	<context-param>
		<param-name>flex.class.path</param-name>
		<param-value>/WEB-INF/flex/hotfixes,/WEB-INF/flex/jars</param-value>
	</context-param>
	
	<!-- START Spring Config -->
	<context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>
	        /WEB-INF/applicationContext.xml
	        /WEB-INF/hibernateSettings.xml
	    </param-value>
	</context-param>
  	<!-- END Spring Config -->
	
	
	<!-- nimer: remove this filter -->
	<!-- START Hibernate Session Filter 
	<filter>
        <filter-name>hibernateSessionFilter</filter-name>
        <filter-class>net.digitalprimates.persistence.hibernate.utils.filters.HibernateSessionServletFilter</filter-class>
    </filter>
	
    <filter-mapping>
        <filter-name>hibernateSessionFilter</filter-name>
        <url-pattern>/messagebroker/*</url-pattern>
    </filter-mapping>
	-->
	<!-- END Hibernate Session Filter -->
	
	<!-- nimer: add the spring specific servlet filter -->
	<filter>  
		<filter-name>openSessionInViewFilter</filter-name>  
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>ALWAYS</param-value>
		</init-param>				
	</filter>
	
	<filter-mapping>  
		<filter-name>openSessionInViewFilter</filter-name>  
		<url-pattern>/messagebroker/*</url-pattern>
	</filter-mapping>
	  
	<!-- START Spring Config -->
	<listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- END Spring Config -->
	

    <!-- Http Flex Session attribute and binding listener support -->
    <listener>
        <listener-class>flex.messaging.HttpFlexSession</listener-class>
    </listener>

    <!-- MessageBroker Servlet -->
    <servlet>
        <servlet-name>MessageBrokerServlet</servlet-name>
        <display-name>MessageBrokerServlet</display-name>
        <servlet-class>flex.messaging.MessageBrokerServlet</servlet-class>
        <init-param>
            <param-name>services.configuration.file</param-name>
            <param-value>/WEB-INF/flex/services-config.xml</param-value>
       </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>MessageBrokerServlet</servlet-name>
        <url-pattern>/messagebroker/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>

	<taglib>
		<taglib-uri>FlexTagLib</taglib-uri>
		<taglib-location>/WEB-INF/lib/flex-bootstrap-jsp.jar</taglib-location>
	</taglib>

    <!-- for WebSphere deployment, please uncomment -->
    <!--
    <resource-ref>
        <description>Flex Messaging WorkManager</description>
        <res-ref-name>wm/MessagingWorkManager</res-ref-name>
        <res-type>com.ibm.websphere.asynchbeans.WorkManager</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
    -->

</web-app>
